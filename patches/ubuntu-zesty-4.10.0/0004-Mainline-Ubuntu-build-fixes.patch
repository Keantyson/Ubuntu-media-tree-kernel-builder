From 91d292c617dfe39a894a0732c1daa4ba51f1168e Mon Sep 17 00:00:00 2001
From: Brad Love <hidden@email.co>
Date: Sat, 7 Oct 2017 14:39:30 -0500
Subject: [PATCH 4/6] Mainline Ubuntu build fixes

---
 drivers/dma-buf/sync_debug.c            |  2 +-
 drivers/dma-buf/sync_file.c             |  2 +-
 drivers/hid/hid-picolcd_cir.c           |  7 +++----
 drivers/net/ethernet/via/via-velocity.c | 10 +++++-----
 drivers/staging/greybus/light.c         | 12 ++++++------
 fs/compat_ioctl.c                       |  2 --
 6 files changed, 16 insertions(+), 19 deletions(-)

diff --git a/drivers/dma-buf/sync_debug.c b/drivers/dma-buf/sync_debug.c
index 48b20e34fb6d..07bcb4d5ecda 100644
--- a/drivers/dma-buf/sync_debug.c
+++ b/drivers/dma-buf/sync_debug.c
@@ -78,7 +78,7 @@ static void sync_print_fence(struct seq_file *s,
 	struct sync_timeline *parent = dma_fence_parent(fence);
 
 	if (dma_fence_is_signaled_locked(fence))
-		status = fence->status;
+		status = fence->error;
 
 	seq_printf(s, "  %s%sfence %s",
 		   show ? parent->name : "",
diff --git a/drivers/dma-buf/sync_file.c b/drivers/dma-buf/sync_file.c
index 6d802f2d2881..a9ee7babb00e 100644
--- a/drivers/dma-buf/sync_file.c
+++ b/drivers/dma-buf/sync_file.c
@@ -380,7 +380,7 @@ static void sync_fill_fence_info(struct dma_fence *fence,
 	strlcpy(info->driver_name, fence->ops->get_driver_name(fence),
 		sizeof(info->driver_name));
 	if (dma_fence_is_signaled(fence))
-		info->status = fence->status >= 0 ? 1 : fence->status;
+		info->status = fence->error >= 0 ? 1 : fence->error;
 	else
 		info->status = 0;
 	info->timestamp_ns = ktime_to_ns(fence->timestamp);
diff --git a/drivers/hid/hid-picolcd_cir.c b/drivers/hid/hid-picolcd_cir.c
index 96286510f42e..32747b7f917e 100644
--- a/drivers/hid/hid-picolcd_cir.c
+++ b/drivers/hid/hid-picolcd_cir.c
@@ -108,16 +108,15 @@ int picolcd_init_cir(struct picolcd_data *data, struct hid_report *report)
 	struct rc_dev *rdev;
 	int ret = 0;
 
-	rdev = rc_allocate_device();
+	rdev = rc_allocate_device(RC_DRIVER_IR_RAW);
 	if (!rdev)
 		return -ENOMEM;
 
 	rdev->priv             = data;
-	rdev->driver_type      = RC_DRIVER_IR_RAW;
-	rdev->allowed_protocols = RC_BIT_ALL;
+	rdev->allowed_protocols = RC_PROTO_BIT_ALL_IR_DECODER;
 	rdev->open             = picolcd_cir_open;
 	rdev->close            = picolcd_cir_close;
-	rdev->input_name       = data->hdev->name;
+	rdev->device_name      = data->hdev->name;
 	rdev->input_phys       = data->hdev->phys;
 	rdev->input_id.bustype = data->hdev->bus;
 	rdev->input_id.vendor  = data->hdev->vendor;
diff --git a/drivers/net/ethernet/via/via-velocity.c b/drivers/net/ethernet/via/via-velocity.c
index 4716e60e2ccb..58f127a13efe 100644
--- a/drivers/net/ethernet/via/via-velocity.c
+++ b/drivers/net/ethernet/via/via-velocity.c
@@ -85,8 +85,8 @@
 #include "via-velocity.h"
 
 enum velocity_bus_type {
-	BUS_PCI,
-	BUS_PLATFORM,
+	bus_pci = 0x01,
+	bus_platform = 0x02,
 };
 
 static int velocity_nics;
@@ -2797,7 +2797,7 @@ static int velocity_probe(struct device *dev, int irq,
 
 	velocity_init_info(vptr, info);
 
-	if (bustype == BUS_PCI) {
+	if (bustype == bus_pci) {
 		vptr->pdev = to_pci_dev(dev);
 
 		ret = velocity_get_pci_info(vptr);
@@ -2927,7 +2927,7 @@ static int velocity_pci_probe(struct pci_dev *pdev,
 		goto fail1;
 	}
 
-	ret = velocity_probe(&pdev->dev, pdev->irq, info, BUS_PCI);
+	ret = velocity_probe(&pdev->dev, pdev->irq, info, bus_pci);
 	if (ret == 0)
 		return 0;
 
@@ -2960,7 +2960,7 @@ static int velocity_platform_probe(struct platform_device *pdev)
 	if (!irq)
 		return -EINVAL;
 
-	return velocity_probe(&pdev->dev, irq, info, BUS_PLATFORM);
+	return velocity_probe(&pdev->dev, irq, info, bus_platform);
 }
 
 static int velocity_platform_remove(struct platform_device *pdev)
diff --git a/drivers/staging/greybus/light.c b/drivers/staging/greybus/light.c
index 8dffd8a7e762..c60171f34ed1 100644
--- a/drivers/staging/greybus/light.c
+++ b/drivers/staging/greybus/light.c
@@ -537,7 +537,7 @@ static int gb_lights_light_v4l2_register(struct gb_light *light)
 	struct device *dev = &connection->bundle->dev;
 	struct v4l2_flash_config *sd_cfg;
 	struct led_classdev_flash *fled;
-	struct led_classdev_flash *iled = NULL;
+	struct led_classdev *iled = NULL;
 	struct gb_channel *channel_torch, *channel_ind, *channel_flash;
 	int ret = 0;
 
@@ -548,13 +548,13 @@ static int gb_lights_light_v4l2_register(struct gb_light *light)
 	channel_torch = get_channel_from_mode(light, GB_CHANNEL_MODE_TORCH);
 	if (channel_torch)
 		__gb_lights_channel_v4l2_config(&channel_torch->intensity_uA,
-						&sd_cfg->torch_intensity);
+						&sd_cfg->intensity);
 
 	channel_ind = get_channel_from_mode(light, GB_CHANNEL_MODE_INDICATOR);
 	if (channel_ind) {
 		__gb_lights_channel_v4l2_config(&channel_ind->intensity_uA,
-						&sd_cfg->indicator_intensity);
-		iled = &channel_ind->fled;
+						&sd_cfg->intensity);
+		iled = channel_ind->led;
 	}
 
 	channel_flash = get_channel_from_mode(light, GB_CHANNEL_MODE_FLASH);
@@ -571,8 +571,8 @@ static int gb_lights_light_v4l2_register(struct gb_light *light)
 		LED_FAULT_UNDER_VOLTAGE | LED_FAULT_INPUT_VOLTAGE |
 		LED_FAULT_LED_OVER_TEMPERATURE;
 
-	light->v4l2_flash = v4l2_flash_init(dev, NULL, fled, iled,
-					    &v4l2_flash_ops, sd_cfg);
+	light->v4l2_flash = v4l2_flash_init(dev, NULL, fled, &v4l2_flash_ops,
+						sd_cfg);
 	if (IS_ERR_OR_NULL(light->v4l2_flash)) {
 		ret = PTR_ERR(light->v4l2_flash);
 		goto out_free;
diff --git a/fs/compat_ioctl.c b/fs/compat_ioctl.c
index 11d087b2b28e..b3b4dfafb5e4 100644
--- a/fs/compat_ioctl.c
+++ b/fs/compat_ioctl.c
@@ -1338,8 +1338,6 @@ COMPATIBLE_IOCTL(DMX_SET_FILTER)
 COMPATIBLE_IOCTL(DMX_SET_PES_FILTER)
 COMPATIBLE_IOCTL(DMX_SET_BUFFER_SIZE)
 COMPATIBLE_IOCTL(DMX_GET_PES_PIDS)
-COMPATIBLE_IOCTL(DMX_GET_CAPS)
-COMPATIBLE_IOCTL(DMX_SET_SOURCE)
 COMPATIBLE_IOCTL(DMX_GET_STC)
 COMPATIBLE_IOCTL(FE_GET_INFO)
 COMPATIBLE_IOCTL(FE_DISEQC_RESET_OVERLOAD)
-- 
2.11.0

