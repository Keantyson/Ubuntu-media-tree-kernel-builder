From cf77288587f1f12eaf6b388ebaa492183e2d29e7 Mon Sep 17 00:00:00 2001
From: Brad Love <hidden@email.co>
Date: Wed, 19 Apr 2017 23:14:44 +0000
Subject: [PATCH 4/6] Mainline Ubuntu build fixes

---
 drivers/dma-buf/sync_debug.c            |  2 +-
 drivers/dma-buf/sync_file.c             |  2 +-
 drivers/hid/hid-picolcd_cir.c           |  5 ++---
 drivers/net/ethernet/via/via-velocity.c | 10 +++++-----
 4 files changed, 9 insertions(+), 10 deletions(-)

diff --git a/drivers/dma-buf/sync_debug.c b/drivers/dma-buf/sync_debug.c
index 48b20e34fb6d..07bcb4d5ecda 100644
--- a/drivers/dma-buf/sync_debug.c
+++ b/drivers/dma-buf/sync_debug.c
@@ -78,7 +78,7 @@ static void sync_print_fence(struct seq_file *s,
 	struct sync_timeline *parent = dma_fence_parent(fence);
 
 	if (dma_fence_is_signaled_locked(fence))
-		status = fence->status;
+		status = fence->error;
 
 	seq_printf(s, "  %s%sfence %s",
 		   show ? parent->name : "",
diff --git a/drivers/dma-buf/sync_file.c b/drivers/dma-buf/sync_file.c
index 6d802f2d2881..a9ee7babb00e 100644
--- a/drivers/dma-buf/sync_file.c
+++ b/drivers/dma-buf/sync_file.c
@@ -380,7 +380,7 @@ static void sync_fill_fence_info(struct dma_fence *fence,
 	strlcpy(info->driver_name, fence->ops->get_driver_name(fence),
 		sizeof(info->driver_name));
 	if (dma_fence_is_signaled(fence))
-		info->status = fence->status >= 0 ? 1 : fence->status;
+		info->status = fence->error >= 0 ? 1 : fence->error;
 	else
 		info->status = 0;
 	info->timestamp_ns = ktime_to_ns(fence->timestamp);
diff --git a/drivers/hid/hid-picolcd_cir.c b/drivers/hid/hid-picolcd_cir.c
index 96286510f42e..8ffbb6f65a65 100644
--- a/drivers/hid/hid-picolcd_cir.c
+++ b/drivers/hid/hid-picolcd_cir.c
@@ -108,13 +108,12 @@ int picolcd_init_cir(struct picolcd_data *data, struct hid_report *report)
 	struct rc_dev *rdev;
 	int ret = 0;
 
-	rdev = rc_allocate_device();
+	rdev = rc_allocate_device(RC_DRIVER_IR_RAW);
 	if (!rdev)
 		return -ENOMEM;
 
 	rdev->priv             = data;
-	rdev->driver_type      = RC_DRIVER_IR_RAW;
-	rdev->allowed_protocols = RC_BIT_ALL;
+	rdev->allowed_protocols = RC_BIT_ALL_IR_DECODER;
 	rdev->open             = picolcd_cir_open;
 	rdev->close            = picolcd_cir_close;
 	rdev->input_name       = data->hdev->name;
diff --git a/drivers/net/ethernet/via/via-velocity.c b/drivers/net/ethernet/via/via-velocity.c
index 4716e60e2ccb..58f127a13efe 100644
--- a/drivers/net/ethernet/via/via-velocity.c
+++ b/drivers/net/ethernet/via/via-velocity.c
@@ -85,8 +85,8 @@
 #include "via-velocity.h"
 
 enum velocity_bus_type {
-	BUS_PCI,
-	BUS_PLATFORM,
+	bus_pci = 0x01,
+	bus_platform = 0x02,
 };
 
 static int velocity_nics;
@@ -2797,7 +2797,7 @@ static int velocity_probe(struct device *dev, int irq,
 
 	velocity_init_info(vptr, info);
 
-	if (bustype == BUS_PCI) {
+	if (bustype == bus_pci) {
 		vptr->pdev = to_pci_dev(dev);
 
 		ret = velocity_get_pci_info(vptr);
@@ -2927,7 +2927,7 @@ static int velocity_pci_probe(struct pci_dev *pdev,
 		goto fail1;
 	}
 
-	ret = velocity_probe(&pdev->dev, pdev->irq, info, BUS_PCI);
+	ret = velocity_probe(&pdev->dev, pdev->irq, info, bus_pci);
 	if (ret == 0)
 		return 0;
 
@@ -2960,7 +2960,7 @@ static int velocity_platform_probe(struct platform_device *pdev)
 	if (!irq)
 		return -EINVAL;
 
-	return velocity_probe(&pdev->dev, irq, info, BUS_PLATFORM);
+	return velocity_probe(&pdev->dev, irq, info, bus_platform);
 }
 
 static int velocity_platform_remove(struct platform_device *pdev)
-- 
2.11.0

